openapi: "3.0.2"
info:
  title: Elite Tapp API
  version: "1.0.0"
servers:
  - url: http://localhost:5000/api/v1
    description: Local
  - url: https://elite-tapp-api.herokuapp.com/api/v1
    description: Heroku Production
tags:
  - name: User
    description: User related endpoints
  - name: Auth
    description: Authentication related endpoints
paths:
  /user/register:
    post:
      summary: Register user account
      description: Registers user in the system
      operationId: registerUser
      tags:
        - User
      requestBody:
        $ref: "#/components/requestBodies/RegisterBody"
      responses:
        "200":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccountCreatedSchema"
        "409":
          description: Account exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"
        "400":
          $ref: "#/components/responses/ValidationError"
        "500":
          $ref: "#/components/responses/UnknownError"
  /auth/login:
    post:
      summary: Login to the app
      description: Issue login tokens for user
      operationId: loginUser
      tags:
        - Auth
      requestBody:
        $ref: "#/components/requestBodies/LoginBody"
      responses:
        "200":
          $ref: "#/components/responses/LoginSuccessResponse"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnknownError"
        "500":
          $ref: "#/components/responses/UnknownError"
  /auth/login/token:
    post:
      summary: Login to the app with refresh token
      description: Issue login tokens for user for refresh token
      operationId: loginRefreshToken
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  $ref: "#/components/schemas/RefreshToken"
      responses:
        "200":
          $ref: "#/components/responses/LoginSuccessResponse"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnknownError"
        "500":
          $ref: "#/components/responses/UnknownError"
  /auth/verify:
    post:
      summary: Verify user account
      description: Verify user account
      operationId: verifyAccount
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                verificationId:
                  $ref: "#/components/schemas/IdSchema"
                otpCode:
                  $ref: "#/components/schemas/OTPCode"
              required:
                - verificationId
      responses:
        "200":
          $ref: "#/components/responses/OkResponse"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnknownError"
        "500":
          $ref: "#/components/responses/UnknownError"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    LoginSuccessResponse:
      description: login success response
      content:
        application/json:
          schema:
            type: object
            properties:
              accessToken:
                $ref: "#/components/schemas/AccessToken"
              refreshToken:
                $ref: "#/components/schemas/RefreshToken"
              user:
                $ref: "#/components/schemas/UserPrivateBase"
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIError"
    OkResponse:
      description: Ok
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageResponse"
    UnknownError:
      description: Unknown Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIError"
    ValidationError:
      description: ValidationError Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIError"
  schemas:
    IdSchema:
      type: string
      description: Describes an resource id
      example: 6cf6f9fa-98bc-481e-91dd-57d13717ddde
    OTPCode:
      type: string
      description: OTP code if present
      example: "066111"
    UserRegisterSchema:
      type: object
      description: User register
      properties:
        login:
          type: string
          description: email or phone number
          example: jhondoe@example.com
        password:
          type: string
          description: password
          example: mypassword
          minLength: 6
    UserAccountCreatedSchema:
      type: object
      properties:
        message:
          type: string
          example: "Account created"
        method:
          type: string
          enum:
            - phone
            - email
        verificationId:
          type: string
          description: OTP activation id when method is `phone`. For email this will be sent
          example: 6cf6f9fa-98bc-481e-91dd-57d13717ddde
          nullable: true
    UserPrivateBase:
      type: object
      properties:
        id:
          type: string
          example: 6cf6f9fa-98bc-481e-91dd-57d13717ddde
          description: Id of user
        username:
          type: string
          format: nullable
          example: jhon
          description: username
        email:
          type: string
          format: nullable
          example: jhondoe@example.com
          description: email
        phone:
          type: string
          example: +9471222220
          description: phone
        passwordSet:
          type: boolean
          description: Is password set for account
          example: false
    AccessToken:
      type: object
      properties:
        token:
          type: string
          example: token_1233333
        expires:
          type: string
          example: 2021-03-01T19:22:41.065Z
        tokenType:
          type: string
          example: Bearer
    RefreshToken:
      type: string
      example: 603cd9a09e798300a9aba8f2.b4
    MessageResponse:
      type: object
      description: message
      properties:
        message:
          type: string
          example: ok
    ValidationError:
      allOf:
        - $ref: "#/components/schemas/ErrorBase"
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ValidationErrorField"
    ValidationErrorField:
      type: object
      properties:
        field:
          type: array
          items:
            type: string
        location:
          type: string
          example: body
        messages:
          type: array
          items:
            type: string
        types:
          type: array
          items:
            type: string
    APIError:
      allOf:
        - $ref: "#/components/schemas/ErrorBase"
      properties:
        errors:
          type: array
          title: an array of errors
          items:
            type: object
    ErrorBase:
      type: object
      properties:
        name:
          type: string
          title: Name of the error
        message:
          type: string
          title: Descriptive error message
        status:
          type: integer
          title: HTTP Error code
        errorCode:
          type: integer
          title: API Specific error code
  requestBodies:
    RegisterBody:
      description: JSON object with registration info
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserRegisterSchema"
    LoginBody:
      description: Login
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserRegisterSchema"
